import { Button, VerticalBox, TextEdit, LineEdit, HorizontalBox } from "std-widgets.slint";

enum Page {
    Menu,
    Encode,
    Decode,
    Key
}


export component AppWindow inherits Window {
    title: "Ghost Text";
    width: 820px;
    height: 600px;

    callback encode(string);
    callback encrypt_file();
    callback decrypt_file();
    callback decode(string);
    callback set_key_msg(string);
    callback exit();

    property <Page> current_view: Page.Menu;
    in property <string> main_error_field;
    in property <string> decoding_field;
    in property <string> encoding_field;
    in property <string> decoding_field_2;
    in property <string> encoding_field_2;
    in property <string> key_field;
    in-out property <string> key_message: "Current Key";
    in-out property <string> key_value: "None";
    in-out property <string> cloni;
    in-out property <string> cloni_2;
    
    
    VerticalBox {
        alignment: center;
        if (current_view == Page.Menu) : VerticalBox {
            VerticalBox {
                    padding-left: 40px;
                    padding-right: 40px;
                Text {
                    
                    text: "Text and File Encryption - Decryption";
                    horizontal-alignment: center;
                    font-size: 26px;
                }

                Text {
                    wrap: word-wrap;
                    text: "Usage:\n\n1.If this is your first time using the application, enter a new Security Key.\n  → Using the default key is not secure!\n  → The Security Key is saved as plain text in the home folder as a .passkey file.\n2.Go to the Encrypt Menu, insert your text or a file, and encrypt it.\n3.Share the encrypted message/file with someone who has the same Security Key.\n  → Don't share the security key with anybody who is not supposed to decrypt texts and files.\n4.Decrypt the message/file using the Decrypt Menu and enjoy privacy on social networks!";
                    horizontal-alignment: left;
                    font-size: 14px;
                }

                Text {
                    wrap: word-wrap;
                    text: main_error_field;
                    horizontal-alignment: left;
                    font-size: 15px;
                    color: orange;
                    
                }
            }

            VerticalBox {
                height: 30px;
            }

            VerticalBox {
                spacing: 15px;
                
                HorizontalBox {
                    alignment: center;
                    Button {
                    
                        text: "Encrypt Menu";
                        height: 40px;
                        width: 600px;
                        primary: true;
                        clicked => {
                            root.current_view = Page.Encode;
                        }     
                    }
                }

                HorizontalBox {
                    alignment: center;
                    Button {
                        text: "Decrypt Menu";
                        height: 40px;
                        width: 600px;
                        clicked => {
                            root.current_view = Page.Decode;
                        }
                        
                    }
                }

                HorizontalBox {
                    alignment: center;
                    Button {
                        text: "Enter Key";
                        height: 40px;
                        width: 600px;
                        clicked => {
                            root.current_view = Page.Key;
                        }
                        
                    }
                }

                HorizontalBox {
                    alignment: center;
                    Button {
                        text: "Exit";
                        height: 40px;
                        width: 600px;
                        clicked => {
                            root.exit()
                        }
                    }
                }
            }

            HorizontalBox {
                alignment: end;
                padding-right: 30px;
                Text {
                    text: "Made with ❤ by Suomi422";
                    font-size: 12px;
                }
            }
        }


        if (current_view == Page.Encode) : VerticalBox {
            alignment: center;

            Text {
                text: "Encrypt Menu";
                horizontal-alignment: center;
                font-size: 30px;
            }

            HorizontalBox {
                alignment: center;

                Rectangle {
                    width: 740px;
                    height: 150px;
            
            
                    encoding_field := TextEdit {
                        font-size: 15px;
                        width: parent.width;
                        height: parent.height;
                        text: "";
                    }
            
                    Text {
                        text: "Enter text here ...";
                        color: #888;
                        visible: encoding_field.text == "";
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }
                }
            }

            HorizontalBox {
                alignment: center;

                decoding_field := TextEdit {
                    font-size: 15px;
                    width: 740px;
                    height: 150px;
                    text: root.cloni;
                    read-only: true;
                }
            }

            GridLayout {
                HorizontalBox {
                    alignment: center;

                    Button {
                        text: "Copy";
                        width: 350px;
                        height: 40px;
                        clicked => {
                            decoding-field.select-all();
                            decoding-field.copy();
                        }
                    }
            
                    Button {
                        text: "Paste";
                        width: 350px;
                        height: 40px;
                        clicked => {
                            encoding-field.select-all();
                            encoding-field.paste();
                        }
                        
                    }
                }
            }

            GridLayout {
                HorizontalBox {
                    alignment: center;
                    Button {
                        text: "Encrypt Text";
                        width: 350px;
                        height: 40px;
                        primary: true;
                        clicked => {
                            root.encode(encoding-field.text);
                        }
                    }

                    Button {
                        text: "Encrypt File";
                        width: 350px;
                        height: 40px;
                        clicked => {
                            root.encrypt_file();
                        }
                    }
                }
            }

            HorizontalBox {
                alignment: center;
                Button {
                    text: "Menu";
                    width: 600px;
                    height: 40px;
                    clicked => {
                        root.cloni = "";
                        root.current_view = Page.Menu;
                    }
                }
            }
        }


        if (current_view == Page.Decode) : VerticalBox {
            alignment: center;
            Text {
                text: "Decrypt Menu";
                horizontal-alignment: center;
                font-size: 30px;
            }

            HorizontalBox {
                alignment: center;

                Rectangle {
                    width: 740px;
                    height: 150px;
            
                    encoding_field_2 := TextEdit {
                        font-size: 15px;
                        width: parent.width;
                        height: parent.height;
                        text: "";

                    }
            
                    Text {
                        text: "Enter text here ...";
                        color: #888;
                        visible: encoding_field_2.text == "";
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }
                }
            }

            HorizontalBox {
                alignment: center;

                decoding_field_2 := TextEdit {
                    font-size: 15px;
                    width: 740px;
                    height: 150px;
                    read-only: true;
                    text: root.cloni_2;
                }
            }

            GridLayout {
                HorizontalBox {
                    alignment: center;

                    Button {
                        text: "Copy";
                        width: 350px;
                        height: 40px;
                        clicked => {
                            decoding-field_2.select-all();
                            decoding-field_2.copy();
                        }
                    }
            
                    Button {
                        text: "Paste";
                        width: 350px;
                        height: 40px;
                        clicked => {
                            encoding-field_2.select-all();
                            encoding-field_2.paste();
                        }
                        
                    } 
                }
            }

            GridLayout {
                HorizontalBox {
                    alignment: center;

                    Button {
                        text: "Decrypt Text";
                        primary: true;
                        width: 350px;
                        height: 40px;
                        clicked => {
                            root.decode(encoding-field_2.text);
                        }
                    }

                    Button {
                        text: "Decrypt File";
                        width: 350px;
                        height: 40px;
                        clicked => {
                            root.decrypt_file();
                        }
                    }
                }
            }
            
            HorizontalBox {
                alignment: center;
                Button {
                    text: "Menu";
                    width: 600px;
                    height: 40px;
                    clicked => {
                        root.cloni_2 = "";
                        root.current_view = Page.Menu;
                    }
                }
            }
        }


        if (current_view == Page.Key) : VerticalBox {
            alignment: center;

            Text {
                text: "Key Registration";
                horizontal-alignment: center;
                font-size: 30px;
            }

            HorizontalBox {
                alignment: center;
                Text {
                    width: 500px;
                    text: "Key must have exactly 32 characters. If less is inputed, rest will be generated randomly. If more, rest is cutted off.";
                    horizontal-alignment: center;
                    font-size: 15px;
                    wrap: word-wrap;
                }
            }

            HorizontalBox {
                alignment: center;
                key_field := LineEdit {
                    horizontal-alignment: center;
                    font-size: 20px;
                    width: 500px;
                    height: 50px;
                    text: "";

                }
            }

            HorizontalBox {
                alignment: center;
                Button {
                    text: "Register";
                    height: 40px;
                    width: 500px;
                    primary: true;
                    clicked => {
                        root.set_key_msg(key-field.text);
                    }
                }
            }
                
            VerticalBox {
                height: 10px;
            }

            Text {
                text: key_message;
                horizontal-alignment: center;
                font-size: 20px;
            }

            HorizontalBox {
                alignment: center;
                keyField := LineEdit {
                    text: key_value;
                    width: 500px;
                    height: 50px;
                    horizontal-alignment: center;
                    font-size: 15px;
                    read-only: true;
                }
            }

            HorizontalBox {
                alignment: center;
                Button {
                    text: "Copy to clipboard";
                    width: 500px;
                    height: 40px;
                    primary: true;
                    clicked => {
                        keyField.select-all();
                        keyField.copy();
                    }
                }
            }

            HorizontalBox {
                alignment: center;
                Button {
                    text: "Menu";
                    width: 300px;
                    height: 40px;
                    clicked => {
                        key_message = "Current Key";
                        root.current_view = Page.Menu;
                    }
                    
                }
            }
        }
    }
}
